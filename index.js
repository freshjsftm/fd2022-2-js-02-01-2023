"use strict";

//написати рекурсивну функцію, яка приймає число 
//і повертає рядок з вкладених пар круглих дужок
//кількість пар дорівнює прийнятому аргументу
//якщо число(аргумет) менше 1 - повертаємо лише одну пару круглих дужок
//обробляємо помилки!
//виклик робимо в try/catch
//pairBrickets(4) => '(((())))'
//pairBrickets(-4) => '()'
//pairBrickets('qwe') => throw 


// написати рекурсивну функцію, яка приймає два числа і повертає 
// найбільший спільний дільник цих двох чисел 
// getDivider(24, 15) -> 3
// getDivider(3, 3) -> 3
// getDivider(7, 3) -> 1
//Алгоритм Евкліда дозволяє знайти НСД двох натуральних чисел. 
//Суть алгоритму Евкліда – два числа порівнюють 
//і від більшого віднімають менше до тих пір, 
//поки числа не стануть рівними. Число, якому вони 
//стануть рівними, і є їх найбільший спільний дільник.